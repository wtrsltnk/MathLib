// Matrix.cpp: implementation of the Matrix class.
//
//////////////////////////////////////////////////////////////////////

#include "stdafx.h"

////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
////////////////////////////////////////////////////////////////////////////////////
float Wiskunde::PI()
{
	return 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067f;
}

////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
////////////////////////////////////////////////////////////////////////////////////
float Wiskunde::RAD2DEG(float radiant)
{
	return radiant * 180 / PI();
}

////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
////////////////////////////////////////////////////////////////////////////////////
float Wiskunde::DEG2RAD(float degrees)
{
	return degrees * PI() / 180;
}

////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
////////////////////////////////////////////////////////////////////////////////////
Vector Wiskunde::GetNormal(Vector V1, Vector V2, Vector V3)
{
	Vector Vec1 = V1.Vectorize(V2);
	Vector Vec2 = V1.Vectorize(V3);

	Vector Normal = Wiskunde::Cross(Vec1, Vec2);

	Normal.Normalize();

	return Normal;
}

////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
////////////////////////////////////////////////////////////////////////////////////
Vector Wiskunde::Cross(Vector V1, Vector V2)
{
	return Vector(	(V1.Y * V2.Z) - (V1.Z * V2.Y),
					(V1.Z * V2.X) - (V1.X * V2.Z),
					(V1.X * V2.Y) - (V1.Y * V2.X));
}

////////////////////////////////////////////////////////////////////////////////////
// Purpose : 
// Input   : 
// Output  : 
////////////////////////////////////////////////////////////////////////////////////
Vector Wiskunde::Normalize(Vector V)
{
	float magnitude = V.Magnitude();

	return Vector(V / magnitude);
}